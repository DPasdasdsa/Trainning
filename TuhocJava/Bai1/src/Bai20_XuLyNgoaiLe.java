public class Bai20_XuLyNgoaiLe {
    public static void main(String[] args) {
        int a=10;
        int b=0;

        try{
            int c=a/b;
            System.out.println("c "+c);
        }
        catch(ArithmeticException e){// n√≥ s·∫Ω ∆∞u ti√™n b·∫Øt l·ªói c·ª• th·ªÉ tr∆∞·ªõc n·∫øu kh√¥ng b·∫Øt ƒë∆∞·ª£c n√≥ m·ªõi nh·∫£y catch sau
            System.out.println("C√≥ l·ªói to√°n h·ªçc r·ªìi th√≠m ∆°i ");
            e.printStackTrace();
        }
        catch(Exception e){
            System.out.println("C√≥ l·ªói r·ªìi th√≠m ∆°i ");
            e.printStackTrace();
        }
        finally {
            System.out.println("C√≥ l·ªói hay kh√¥ng l·ªói ƒë·ªÅu ph·∫£i l√†m c√°i n√†y");
        }

        System.out.println("ƒêo·∫°n code ph√≠a sau");
    }
}
// ArithmeticException ex // d√πng n√≥ khi m√¨nh bi·∫øt c·ª• th·ªÉ c·ªßa m·ªôt l·ªói x·∫£y ra
// Exception ex // n√™n d√πng n√≥ h∆°n khi kh√¥ng ƒëo√°n ra l·ªói c·ª• th·ªÉ
//th∆∞·ªùng d√πng 2 l·ªói n√†y
// | ‚ùì **T√™n l·ªói (Exception)**        | üí• **Khi n√†o x·∫£y ra**                              | üìö **Gi·∫£i th√≠ch / C√¥ng d·ª•ng**                          | üß© **Lo·∫°i**     |
//| -------------------------------- | -------------------------------------------------- | ------------------------------------------------------ | --------------- |
//| `ArithmeticException`            | Chia cho 0 (`a / 0`)                               | Tr√°nh crash khi t√≠nh to√°n                              | Runtime         |
//| `InputMismatchException`         | Nh·∫≠p sai ki·ªÉu d·ªØ li·ªáu v·ªõi `Scanner`                | D√πng ƒë·ªÉ y√™u c·∫ßu nh·∫≠p l·∫°i ƒë√∫ng ki·ªÉu                     | Runtime         |
//| `NumberFormatException`          | D√πng `parseInt("abc")` ho·∫∑c t∆∞∆°ng t·ª±               | Ki·ªÉm tra chu·ªói h·ª£p l·ªá tr∆∞·ªõc khi √©p ki·ªÉu                | Runtime         |
//| `ArrayIndexOutOfBoundsException` | Truy c·∫≠p ch·ªâ s·ªë m·∫£ng kh√¥ng t·ªìn t·∫°i (`a[10]`)       | Gi√∫p ki·ªÉm tra logic ch·ªâ s·ªë                             | Runtime         |
//| `NullPointerException`           | G·ªçi `.method()` tr√™n bi·∫øn `null`                   | Ki·ªÉm tra bi·∫øn ƒë√£ kh·ªüi t·∫°o ch∆∞a                         | Runtime         |
//| `FileNotFoundException`          | M·ªü file kh√¥ng t·ªìn t·∫°i                              | Ki·ªÉm tra s·ª± t·ªìn t·∫°i c·ªßa file                           | **Checked**     |
//| `IOException`                    | L·ªói khi thao t√°c ƒë·ªçc/ghi file ho·∫∑c I/O             | D√πng ƒë·ªÉ x·ª≠ l√Ω l·ªói file ho·∫∑c m·∫°ng                       | **Checked**     |
//| `ClassNotFoundException`         | Kh√¥ng t√¨m th·∫•y class khi d√πng `Class.forName()`    | Th∆∞·ªùng d√πng v·ªõi JDBC, Reflection                       | **Checked**     |
//| `IllegalArgumentException`       | Truy tham s·ªë sai v√†o ph∆∞∆°ng th·ª©c (VD: √¢m, null...) | D√πng ƒë·ªÉ ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o                       | Runtime         |
//| `IllegalStateException`          | G·ªçi sai ph∆∞∆°ng th·ª©c trong tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá  | D√πng ki·ªÉm tra logic tr·∫°ng th√°i                         | Runtime         |
//| `SQLException`                   | L·ªói khi thao t√°c v·ªõi c∆° s·ªü d·ªØ li·ªáu SQL             | B·∫Øt l·ªói k·∫øt n·ªëi, c√¢u l·ªánh SQL, v.v.                    | **Checked**     |
//| `RuntimeException`               | Cha c·ªßa c√°c Runtime Exception ·ªü tr√™n               | C√≥ th·ªÉ d√πng ƒë·ªÉ b·∫Øt chung nhi·ªÅu l·ªói                     | Runtime         |
//| `Exception`                      | T·∫•t c·∫£ c√°c l·ªói c√≥ th·ªÉ b·∫Øt                          | D√πng khi kh√¥ng mu·ªën li·ªát k√™ c·ª• th·ªÉ (c·∫©n th·∫≠n khi d√πng) | **Checked**     |
//| `Throwable`                      | Cha c·ªßa Exception v√† Error                         | D√πng ƒë·ªÉ b·∫Øt m·ªçi l·ªói k·ªÉ c·∫£ nghi√™m tr·ªçng (*√≠t d√πng*)     | G·ªëc c·ªßa m·ªçi l·ªói |